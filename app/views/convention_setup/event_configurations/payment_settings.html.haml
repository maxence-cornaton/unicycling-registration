
%h1= t(".header")

%p= t(".description")

%h2 Paypal Settings

%p
  There are 2 paypal settings which can to be configured within the receiving paypal account:

%div
  %h3 1) Auto-Return

  %p
    This means that after a payment is done, the user's browser will be redirected back to the registration website

  %p
    In the paypal system, click on the person icon top right next to sign out -> Profile and settings -> My selling tools -> Selling Online -> Website preferences -> ...
    %br
    %br
    or
    %br
    From "My Account -> Profile -> Sellers Preferences -> Website Payment Preferences -> ...
  %p
  Enable Auto Return:
  %br
  <return_url> will be https://registrationtest.regtest.unicycling-software.com/payments/

%div
  %h3 2) Account Optional

  %p Make it so that user can pay with paypal, without having a paypal account (useful if they just want to pay with a credit card

  %p Set the "PayPal Account Optional" setting on so that people don't have to have a paypal account to pay

  %p
    "My Account -> Profile -> Sellers Preferences -> Website Payment Preferences -> PayPal Account Optional (On) -> save"

%fieldset.form__fieldset
  = simple_form_for(@event_configuration, url: update_payment_settings_event_configuration_path, method: :put) do |f|
    = render partial: "/shared/error_messages", object: @event_configuration

    %p Only specify Either Paypal OR Stripe
    = f.input :paypal_account
    = f.input :stripe_public_key
    - if @event_configuration.stripe_secret_key.present?
      %b Stripe Secret Key is saved.
      %br
      = check_box_tag :replace_stripe_secret_key, nil, false, class: "js--inputEnable", data: { targets: "js--stripeSecretKey" }
      = label_tag :replace_stripe_secret_key, "Replace Stripe Secret Key?"
      = f.input :stripe_secret_key, input_html: { value: nil, class: 'js--stripeSecretKey' }
    - else
      = f.input :stripe_secret_key
    %hr
    = f.input :currency_code, collection: EventConfiguration.currency_codes
    = f.input :payment_mode, collection: EventConfiguration.payment_modes, include_blank: false
    = f.input :offline_payment
    = render "shared/wysiwyg"
    = f.input :offline_payment_description, as: :text, input_html: { class: "tinymce" }

    = f.button :submit
