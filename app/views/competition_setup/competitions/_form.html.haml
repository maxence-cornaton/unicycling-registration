/ Age Group Type:
/ Hide for Freestyle, Freestyle2, Street, Street Final

/ Penalties:
/ Show for: Longest Time

/ LanesQ:
/ Show for Shortest Time

/ hide_max_laps_count
/ Show for Timed Multi-Lap

/ CompetitionSources:
/ Hide for Overall Champion

/ Start Line:
/ Show for:  Points, Timed Multi-Lap, Shortest Time,
/ Hide for: Freestyle, Freestyle2,  Flatland,  High/Long, Longest Time, Street, Street Final, Overall Champion, Standard Skill

/ Finish Line:
/ Show for: Longest Time, Points, Shortest Time, Timed Multi-Lap
/ Hide for: Freestyle, Freestyle, Flatland, High/Long, Overall Champion, Street, Street Final, Standard Skill

/ Sign in List:
/ Hide for Freestyle

/ Overall Champion:
/ Show for Overall Champion

/ Calculate Experts Too:
/ Hide for Freestyle

= simple_form_for(@competition.new_record? ? [@event, @competition] : [@competition]) do |f|
  = render partial: "/shared/error_messages", object: @competition

  = f.input :name
  = f.input :scheduled_completion_at, as: :datetime_picker, include_blank: true

  = f.input :scoring_class, collection: Competition.scoring_classes, include_blank: true, input_html: { class: "js--blockVisibleSource" }
  = f.input :score_ineligible_competitors, label: "Score Ineligible Competitors as normal riders (no automatic ties)"
  = f.input :results_header, label: "Text which should appear on each results page"
  %hr

  / Hidden because this feature is not yet in use
  / = f.input :base_age_group_type_id, collection: AgeGroupType.all, include_blank: true
  = f.input :age_group_type_id, collection: AgeGroupType.all, include_blank: true
  = link_to "Manage Age Groups", age_group_types_path, target: "_blank"

  = f.input :num_members_per_competitor, collection: Competition.num_member_options, include_blank: true

  .js--blockVisibleTarget{ data: { show: ["Shortest Time", "Longest Time"] } }
    %b Penalties
    %p Is it possible to penalize a competitor "X" seconds for an infraction (like dismounting the unicycle)?
    = f.input :penalty_seconds
    %hr

  .js--blockVisibleTarget{ data: { show: ["Shortest Time"] } }
    = f.input :uses_lane_assignments
    %hr

  .js--blockVisibleTarget{ data: { show: ["Timed Multi-Lap"] } }
    = f.input :hide_max_laps_count
    %hr

  %h3 Competition Sources
  .field
    = radio_button_tag :competition_source, "registration", f.object.has_registration_sources?, class: 'js--displayIfChecked', data: { displayblock: "js--registrationSourcesForm" }
    = label_tag :competition_source_registration, "Competitors From Registration List"
  .field
    = radio_button_tag :competition_source, "competition", f.object.has_competition_sources?, class: 'js--displayIfChecked', data: { displayblock: "js--competitionSourcesForm" }
    = label_tag :competition_source_competition, "Competitors From other Competition Source"
  .competitionSource__registration.js--registrationSourcesForm
    = render partial: "registration_sources_form", locals: {f: f, event: @event}

  .competitionSource__competition.js--competitionSourcesForm
    = render partial: "competition_sources_form", locals: {f: f, event: @event}

  %h3 Data Entry Setup

  .js--blockVisibleTarget{ data: { show: ["Points High to Low", "Points Low to High", "Timed Multi-Lap", "Shortest Time", "Shortest Time with Tiers"] } }
    = f.input :start_data_type, collection: Competition.data_recording_types, :include_blank => true

  .js--blockVisibleTarget{ data: { show: ["Longest Time", "Points High to Low", "Points Low to High", "Shortest Time", "Shortest Time with Tiers", "Timed Multi-Lap"] } }
    = f.input :end_data_type, collection: Competition.data_recording_types, :include_blank => true

  %br
  = f.input :sign_in_list_enabled

  %br
  = f.input :time_entry_columns, collection: Competition::TIME_ENTRY_COLUMN_TYPES
  %br
  = f.label :automatic_competitor_creation
  = f.check_box :automatic_competitor_creation, disabled: "disabled"
  %p DISABLED automatic creation because I think that it's more trouble than it's worth

  %p Selecting this option will automatically create a competitor whenever a registrant signs up for any source-event.

  .js--blockVisibleTarget{ data: { show: ["Overall Champion"] } }
    %p If creating an "Overall" competition for aggregate scoring, choose the scoring class
    = f.input :combined_competition_id, collection: CombinedCompetition.all, include_blank: true
    = link_to "Manage Scoring Classes", combined_competitions_path, target: "_blank"

  %h3 Settings for printing the awards
  = f.input :award_title_name
  = f.input :award_subtitle_name
  = f.input :has_experts
  = f.input :import_results_into_other_competition

  = f.button :submit
