%h3 Create Competitors from Signed-Up Registrants

%p
  Signing up for an event does NOT automatically cause that registrant to become a competitor in a competition. It is up to the director to manage the list.
  %br
  This is so that the director can add people who didn't sign up, and remove people who DID sign up, without changing their registration information. Also, for pairs/team events, multiple registrants become a single Competitor through this process.

%p
  Below, you will see a list of all the registrants who have signed up who are not yet assigned as competitors for this competition.

%p Choose the registrants that you would like from the following list, and create competitors from those registrants. All registrants should be associated with competitors

- @remaining_registrants = @registrants - (@competition.competitors.map{ |comp| comp.registrants }.flatten)

- group_types = RegistrantGroupType.where(source_element: @competition.event)
- if group_types.any?
  %table
    %thead
      %tr
        %th Group name
        %th # Members
        %th # Members already Competitors
        %th Action
    %tbody
      - competition_registrants = @competition.competitors.map{|c| c.registrants}.flatten
      - group_types.each do |group_type|
        - group_type.registrant_groups.each do |group|
          %tr
            %td= group
            %td= group.registrant_group_members.count
            %td= (group.registrants & competition_registrants).count
            %td
              - ids = group.registrant_group_member_registrant_ids
              = link_to "Select members", "#", class: "reg_group_select", data: { registrant_ids: ids }
              %br
              = link_to "Create Competitor from members", "#", class: "reg_group_create", data: { registrant_ids: ids, group_name: group.name }

- if @remaining_registrants.any?
  = form_tag(add_competition_competitors_path(@competition), class: "reg_create_form", :method => :post) do
    %a#competitor_select_all{:href => "#"}> All
    \/
    %a#competitor_unselect_all{:href => "#"} None

    %table.sortable
      %caption Signed-up registrants who are not yet competitors
      %thead
        %tr
          %th
          %th ID
          %th Name
          %th Sign Up Details
          %th Assigned to another competition?
      %tbody
        - @remaining_registrants.each do |reg|
          %tr
            - assigned_comp = reg.matching_competition_in_event(@competition.event)
            %td= check_box_tag "registrants[]", reg.id, !assigned_comp, :class => "registrant_checkbox"
            %td= reg.bib_number
            %td= reg
            %td= reg.describe_event(@competition.event)
            %td= assigned_comp

    - display_all = @competition.num_members_per_competitor.nil?
    - if display_all || @competition.num_members_per_competitor == "One"
      = submit_tag Competitor.single_selection_text, :class => "action_button", :data => { :confirm => "This will create a SEPARATE competitor for each chosen registrant. Continue?", disable_with: false }
      %br
    - if @competition.num_members_per_competitor == "Two"
      = submit_tag Competitor.group_selection_text, :class => "action_button", :data => { :confirm => "This will create a Pair with the chosen registrants. Continue?", disable_with: false }
      %br
    - if display_all ||  @competition.num_members_per_competitor == "Three or more"
      = text_field_tag :group_name, nil, :placeholder => "Group Name (optional)"
      %br
      = submit_tag Competitor.group_selection_text, :class => "action_button", :data => { :confirm => "This will create a Single competitor for all chosen registrants. Continue?", disable_with: false }

    = submit_tag Competitor.not_qualified_text, :class => "counter_action_button", :data => { :confirm => "This will create a Single competitor for each registrants, and mark these as 'not qualified'. Continue?", disable_with: false }
- else
  %pb All Registrants are assigned to competition or are marked as "will not compete".
